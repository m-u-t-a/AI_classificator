import gradio as gr
from gradio_pdf import PDF

from definer import define_fields
from extractor import extract_fields
from pdf_extractor import extract_text_from_pdf
from typing import Dict

def format_appeal(data: Dict) -> str:
    return f"""
<div style='font-family: Arial, sans-serif; max-width: 800px; margin: 0 auto;'>
    <h1 style='color: #2b5876; border-bottom: 2px solid #2b5876; padding-bottom: 10px;'>–û–±—Ä–∞—â–µ–Ω–∏–µ –ê–ü –†–§</h1>

    <table style='width: 100%; border-collapse: collapse; margin-bottom: 20px;'>
        <tr style='background-color: #f2f2f2;'>
            <td style='padding: 8px; border: 1px solid #ddd; width: 30%;'><strong>–ù–æ–º–µ—Ä –æ–±—Ä–∞—â–µ–Ω–∏—è</strong></td>
            <td style='padding: 8px; border: 1px solid #ddd;'>{data['–Ω–æ–º–µ—Ä_–æ–±—Ä–∞—â–µ–Ω–∏—è']}</td>
        </tr>
        <tr>
            <td style='padding: 8px; border: 1px solid #ddd;'><strong>–î–∞—Ç–∞ –æ–±—Ä–∞—â–µ–Ω–∏—è</strong></td>
            <td style='padding: 8px; border: 1px solid #ddd;'>{data['–¥–∞—Ç–∞_–æ–±—Ä–∞—â–µ–Ω–∏—è']}</td>
        </tr>
        <tr style='background-color: #f2f2f2;'>
            <td style='padding: 8px; border: 1px solid #ddd;'><strong>–ê–≤—Ç–æ—Ä</strong></td>
            <td style='padding: 8px; border: 1px solid #ddd;'>{data['–∞–≤—Ç–æ—Ä']}</td>
        </tr>
        <tr>
            <td style='padding: 8px; border: 1px solid #ddd;'><strong>Email</strong></td>
            <td style='padding: 8px; border: 1px solid #ddd;'>{data['e-mail']}</td>
        </tr>
        <tr style='background-color: #f2f2f2;'>
            <td style='padding: 8px; border: 1px solid #ddd;'><strong>–¢–µ–ª–µ—Ñ–æ–Ω</strong></td>
            <td style='padding: 8px; border: 1px solid #ddd;'>{data['—Ç–µ–ª–µ—Ñ–æ–Ω']}</td>
        </tr>
        <tr>
            <td style='padding: 8px; border: 1px solid #ddd;'><strong>–ù–∞—Å–µ–ª–µ–Ω–Ω—ã–π –ø—É–Ω–∫—Ç</strong></td>
            <td style='padding: 8px; border: 1px solid #ddd;'>{data['–Ω–∞—Å–µ–ª–µ–Ω–Ω—ã–π_–ø—É–Ω–∫—Ç']}</td>
        </tr>
        <tr>
            <td style='padding: 8px; border: 1px solid #ddd;'><strong>–ê–¥—Ä–µ—Å</strong></td>
            <td style='padding: 8px; border: 1px solid #ddd;'>{data['–∞–¥—Ä–µ—Å']}</td>
        </tr>
        <tr>
            <td style='padding: 8px; border: 1px solid #ddd;'><strong>–°–æ—Ü–∏–∞–ª—å–Ω–æ–µ –ø–æ–ª–æ–∂–µ–Ω–∏–µ</strong></td>
            <td style='padding: 8px; border: 1px solid #ddd;'>{data['—Å–æ—Ü–∏–∞–ª—å–Ω–æ–µ_–ø–æ–ª–æ–∂–µ–Ω–∏–µ']}</td>
        </tr>
        <tr>
            <td style='padding: 8px; border: 1px solid #ddd;'><strong>–ê–¥—Ä–µ—Å–∞—Ç</strong></td>
            <td style='padding: 8px; border: 1px solid #ddd;'>{data['–∞–¥—Ä–µ—Å–∞—Ç']}</td>
        </tr>
        <tr>
            <td style='padding: 8px; border: 1px solid #ddd;'><strong>–¢–µ–∫—Å—Ç –æ–±—Ä–∞—â–µ–Ω–∏—è</strong></td>
            <td style='padding: 8px; border: 1px solid #ddd;'>{data['—Ç–µ–∫—Å—Ç_–æ–±—Ä–∞—â–µ–Ω–∏—è']}</td>
        </tr>
    </table>

    <div style='background-color: #f8f9fa; padding: 15px; border-left: 4px solid #4e73df; margin-bottom: 20px;'>
        <h3 style='color: #2b5876; margin-top: 0;'>–ö–õ–ê–°–°–ò–§–ò–ö–ê–¶–ò–Ø</h3>
        <p style='white-space: pre-line;'>{data['–∫–∞—Ç–µ–≥–æ—Ä–∏—è_–æ–±—Ä–∞—â–µ–Ω–∏—è']}</p>
    </div>
</div>
"""

def qa(doc: str):
    text = extract_text_from_pdf(doc)
    fields = define_fields(text)
    print(fields)
    extracted_fields = extract_fields(fields)
    print(extracted_fields)
    return format_appeal(extracted_fields)

with gr.Blocks(theme=gr.themes.Soft()) as demo:
    gr.Markdown("""
        # üóÇ –°–∏—Å—Ç–µ–º–∞ –∞–Ω–∞–ª–∏–∑–∞ –æ–±—Ä–∞—â–µ–Ω–∏–π
        –ó–∞–≥—Ä—É–∑–∏—Ç–µ PDF-–¥–æ–∫—É–º–µ–Ω—Ç –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞ —Ç–µ–∫—Å—Ç–∞ –æ–±—Ä–∞—â–µ–Ω–∏—è
        """)

    with gr.Tab("–ó–∞–≥—Ä—É–∑–∫–∞ PDF"):
        file_input = PDF(label="–í—Å—Ç–∞–≤—å PDF")
        process_btn = gr.Button("–û–±—Ä–∞–±–æ—Ç–∞—Ç—å")

    with gr.Tab("–†–µ–∑—É–ª—å—Ç–∞—Ç"):
        html_output = gr.HTML()

    process_btn.click(qa, inputs=file_input, outputs=html_output)

demo.launch(share=True)
